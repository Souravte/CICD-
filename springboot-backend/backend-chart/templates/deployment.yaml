apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "backend-chart.labels" . | nindent 4 }}
  name: {{ include "backend-chart.fullname" . }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "backend-chart.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 2
      maxSurge: 2
  template:
    metadata:
      labels:
        {{- include "backend-chart.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "backend-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: sb-cm
          configMap:
            name: {{ .Values.configMap.name }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
      - image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        name: {{ .Chart.Name }}
        ports:
        - containerPort: 8080
        # resources:
        #   {{- toYaml .Values.resources | nindent 10 }}
        # livenessProbe:
        #     httpGet:
        #       path: /actuator/health
        #       port: 8080
        #     initialDelaySeconds: 60
        #     periodSeconds: 10
        #     failureThreshold: 5
        # readinessProbe:
        #    httpGet:
        #      path: /actuator/health
        #      port: 8080
        #    initialDelaySeconds: 60
        #    periodSeconds: 10
        #    failureThreshold: 5
        volumeMounts:
            - name: sb-cm
              mountPath: /home
        env:
        - name: SPRING_PROFILE
          valueFrom:
            configMapKeyRef:
              name: {{ .Values.configMap.name }}
              key: ENVIRONMENT
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: SPRINGDATASOURCEUSERNAME
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Values.secret.name }}
              key: SPRINGDATASOURCEPASSWORD
